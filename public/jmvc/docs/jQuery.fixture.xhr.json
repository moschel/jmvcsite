C({"name": "jQuery.fixture.xhr", "params": {"xhr": {"description": "<p>properties that you want to overwrite</p>", "type": "Object", "optional": true, "order": 0, "name": "xhr"}}, "ret": {"description": "<p>an object that looks like a successful XHR object.</p>", "type": "Object"}, "type": "function", "parent": "jQuery.fixture", "comment": "<p>Use $.fixture.xhr to create an object that looks like an xhr object. </p>\n\n<h3>Example</h3>\n\n<p>The following example shows how the -restCreate fixture uses xhr to return \na simulated xhr object:</p>\n\n<pre><code class='javascript'>\"-restCreate\" : function( settings, cbType ) {\n  switch(cbType){\n    case \"success\": \n      return [\n        {id: parseInt(Math.random()*1000)}, \n        \"success\", \n        $.fixture.xhr()];\n    case \"complete\":\n      return [ \n        $.fixture.xhr({\n          getResponseHeader: function() { \n            return settings.url+\"/\"+parseInt(Math.random()*1000);\n          }\n        }),\n        \"success\"];\n  }\n}</code></pre>", "children": []})