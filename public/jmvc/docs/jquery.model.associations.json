C({"name": "jquery.model.associations", "type": "page", "parent": "../jquery/model/associations/associations.js", "comment": "<p>For efficiency, you often want to get data for related \nrecords at the same time. The jquery.model.assocations.js \nplugin lets you do this.</p>\n\n<p>Lets say we wanted to list tasks for contacts. When we request our contacts, \nthe JSON data will come back like:</p>\n\n<pre><code class='javascript'>[\n {'id': 1,\n  'name' : 'Justin Meyer',\n  'birthday': '1982-10-20',\n  'tasks' : [\n    {'id': 1, \n     'title': \"write up model layer\", \n     'due': \"2010-10-5\" },\n    {'id': 1, \n     'title': \"document models\", \n     'due': \"2010-10-8\"}]},\n  ...\n]</code></pre>\n\n<p>We want to be able to do something like:</p>\n\n<pre><code class='javascript'>var tasks = contact.attr(\"tasks\");\n\ntasks[0].due //-> date</code></pre>\n\n<p>Basically, we want <code>attr(\"tasks\")</code> to\nreturn a list of task instances.</p>\n\n<p>Associations let you do this.  Here's how:</p>\n\n<p>First, create a Task model:</p>\n\n<pre><code class='javascript'>$.Model.extend(\"Task\",{\n  convert : {\n    date : function(date){ ... }\n  },\n  attributes : {\n    due : 'date'\n  }\n},{\n  weeksPastDue : function(){\n    return Math.round( (new Date() - this.due) /\n          (1000*60*60*24*7 ) );\n  }\n})</code></pre>\n\n<p>Then create a Contact model that 'hasMany' tasks:</p>\n\n<pre><code class='javascript'>$.Model.extend(\"Contact\",{\n  associations : {\n    hasMany : \"Task\"\n  },\n  ...\n},{\n  ...\n});</code></pre>\n\n<p>Here's a demo of this in action:</p>\n\n<div class='demo_wrapper' data-demo-src='jquery/model/associations/associations.html'></div>\n\n<p>You can customize associations with\nthe [jQuery.Model.static.belongsTo belongsTo]\nand [jQuery.Model.static.belongsTo hasMany] methods.</p>", "title": "Associations", "parents": ["jQuery.Model"], "download": "jquery/dist/jquery.model.associations.js", "downloadSize": 0, "test": "jquery/model/associations/qunit.html", "plugin": "jquery/model/associations", "children": ["jQuery.Model.static.belongsTo", "jQuery.Model.static.hasMany"]})