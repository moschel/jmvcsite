C({"name": "jQuery.Drag", "type": "class", "parent": "../jquery/event/drag/drag.js", "comment": "<p>Provides drag events as a special events to jQuery. <br />\nA jQuery.Drag instance is created on a drag and passed\nas a parameter to the drag event callbacks.  By calling\nmethods on the drag event, you can alter the drag's\nbehavior.</p>\n\n<h2>Drag Events</h2>\n\n<p>The drag plugin allows you to listen to the following events:</p>\n\n<ul>\n    <li><code>dragdown</code> - the mouse cursor is pressed down</li>\n <li><code>draginit</code> - the drag motion is started</li>\n <li><code>dragmove</code> - the drag is moved</li>\n <li><code>dragend</code> - the drag has ended</li>\n <li><code>dragover</code> - the drag is over a drop point</li>\n <li><code>dragout</code> - the drag moved out of a drop point</li>\n</ul>\n\n<p>Just by binding or delegating on one of these events, you make\nthe element dragable.  You can change the behavior of the drag\nby calling methods on the drag object passed to the callback.\n<h3>Example</h3>\nHere's a quick example:\n\n<pre><code class='javascript'>//makes the drag vertical\n$(\".drags\").live(\"draginit\", function(event, drag){\n  drag.vertical();\n})\n//gets the position of the drag and uses that to set the width\n//of an element\n$(\".resize\").live(\"dragmove\",function(event, drag){\n  $(this).width(drag.position.left() - $(this).offset().left   )\n})</code></pre><h2>Drag Object</h2>\n<p>The drag object is passed after the event to drag \nevent callback functions.  By calling methods\nand changing the properties of the drag object,\nyou can alter how the drag behaves.\n</p>\n\n<p>The drag properties and methods:</p>\n\n<ul>\n    <li><code>[jQuery.Drag.prototype.cancel cancel]</code> - stops the drag motion from happening</li>\n <li><code>[jQuery.Drag.prototype.ghost ghost]</code> - copys the draggable and drags the cloned element</li>\n <li><code>[jQuery.Drag.prototype.horizontal horizontal]</code> - limits the scroll to horizontal movement</li>\n <li><code>[jQuery.Drag.prototype.location location]</code> - where the drag should be on the screen</li>\n <li><code>[jQuery.Drag.prototype.mouseElementPosition mouseElementPosition]</code> - where the mouse should be on the drag</li>\n <li><code>[jQuery.Drag.prototype.only only]</code> - only have drags, no drops</li>\n <li><code>[jQuery.Drag.prototype.representative representative]</code> - move another element in place of this element</li>\n <li><code>[jQuery.Drag.prototype.revert revert]</code> - animate the drag back to its position</li>\n <li><code>[jQuery.Drag.prototype.vertical vertical]</code> - limit the drag to vertical movement</li>\n <li><code>[jQuery.Drag.prototype.limit limit]</code> - limit the drag within an element (*limit plugin)</li>\n <li><code>[jQuery.Drag.prototype.scrolls scrolls]</code> - scroll scrollable areas when dragging near their boundries (*scroll plugin)</li>\n</ul>\n\n<h2>Demo</h2>\n\n<p>Now lets see some examples:</p>\n\n<div class='demo_wrapper' data-demo-src='jquery/event/drag/drag.html'></div>", "parents": ["specialevents"], "plugin": "jquery/event/drag", "download": "jquery/dist/jquery.event.drag.js", "downloadSize": 0, "test": "jquery/event/drag/qunit.html", "construct": "The constructor is never called directly.\n \n", "ret": {"type": "jquery.drag", "description": ""}, "children": ["jQuery.Drag.static", "jQuery.Drag.static.mousedown", "jQuery.Drag.prototype", "jQuery.Drag.prototype.destroy", "jQuery.Drag.prototype.mouseElementPosition", "jQuery.Drag.prototype.currentDelta", "jQuery.Drag.prototype.location", "jQuery.Drag.prototype.position", "jQuery.Drag.prototype.end", "jQuery.Drag.prototype.cleanup", "jQuery.Drag.prototype.cancel", "jQuery.Drag.prototype.ghost", "jQuery.Drag.prototype.representative", "jQuery.Drag.prototype.revert", "jQuery.Drag.prototype.vertical", "jQuery.Drag.prototype.horizontal", "jQuery.Drag.prototype.only", "jQuery.Drag.prototype.limit", "jQuery.Drag.prototype.scrolls", "jQuery.Drag.prototype.move"]})