C({"name": "FuncUnit.static.open", "params": {"path": {"description": "<p>a full or partial url to open.  If a partial is given, </p>", "type": "String", "optional": false, "order": 0, "name": "path"}, "callback": {"description": "", "type": "Function", "optional": false, "order": 1, "name": "callback"}, "timeout": {"description": "", "type": "Number", "optional": false, "order": 2, "name": "timeout"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parent": "FuncUnit.static", "comment": "<p>Opens a page by:\n  temporarily deleting the rhino steal\n  opening the page with Envjs\n  setting back rhino steal, saving envjs's steal as steal._steal;</p>\n\n<p>Opens a page.  It will error if the page can't be opened before timeout. \n <h3>Example</h3></p>\n\n<p><pre><code class='javascript'>//a full url\nS.open(\"http://localhost/app/app.html\")</p>\n\n<p>//from jmvc root (FuncUnit.jmvcRoot must be set)\nS.open(\"//app/app.html\")</code></pre> <h3>Paths in Selenium</h3>\n Selenium runs the testing page from the filesystem and by default will look for pages on the filesystem unless provided a full\n url or information that can translate a partial path into a full url. FuncUnit uses [FuncUnit.static.jmvcRoot] \n and [FuncUnit.static.href] to \n translate partial paths.</p>\n\n<table>\n  <tr>\n      <th>path</th>\n      <th>jmvcRoot</th>\n      <th>href</th>\n      <th>resulting url</th>\n  </tr>\n  <tr>\n    <td>//myapp/mypage.html</td>\n    <td>null</td>\n    <td>null</td>\n    <td>file:///C:/development/cookbook/public/myapp/mypage.html</td>\n  </tr>\n  <tr>\n    <td>//myapp/mypage.html</td>\n    <td>http://localhost/</td>\n    <td></td>\n    <td>http://localhost/myapp/mypage.html</td>\n  </tr>\n  <tr>\n    <td>http://foo.com</td>\n    <td></td>\n    <td></td>\n    <td>http://foo.com</td>\n  </tr>\n  <tr>\n      <td>../mypage.html</td>\n    <td></td>\n    <td>http://localhost/myapp/funcunit.html</td>\n    <td>http://localhost/mypage.html</td>\n  </tr>\n</table>", "children": []})