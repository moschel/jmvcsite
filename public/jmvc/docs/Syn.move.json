C({"name": "Syn.move", "params": {"options": {"description": "", "type": "Object", "optional": false, "order": 0, "name": "options"}, "from": {"description": "", "type": "HTMLElement", "optional": false, "order": 1, "name": "from"}, "callback": {"description": "", "type": "Function", "optional": false, "order": 2, "name": "callback"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parent": "Syn", "comment": "<p>Moves the cursor from one point to another.  </p>\n\n<h3>Quick Example</h3>\n\n<p>The following moves the cursor from (0,0) in\nthe window to (100,100) in 1 second.</p>\n\n<pre><code class='javascript'>Syn.move(\n     {\n       from: {clientX: 0, clientY: 0},\n       to: {clientX: 100, clientY: 100},\n       duration: 1000\n     },\n     document.document)</code></pre><h2>Options</h2>\nThere are many ways to configure the endpoints of the move.\n\n<h3>PageX and PageY</h3>\nIf you pass pageX or pageY, these will get converted\nto client coordinates.\n\n<pre><code class='javascript'>Syn.move(\n     {\n       from: {pageX: 0, pageY: 0},\n       to: {pageX: 100, pageY: 100}\n     },\n     document.document)</code></pre><h3>String Coordinates</h3>\nYou can set the pageX and pageY as strings like:\n\n<pre><code class='javascript'>Syn.move(\n     {\n       from: \"0x0\",\n       to: \"100x100\"\n     },\n     document.document)</code></pre><h3>Element Coordinates</h3>\nIf jQuery is present, you can pass an element as the from or to option\nand the coordinate will be set as the center of the element.\n\n<pre><code class='javascript'>Syn.move(\n     {\n       from: $(\".recipe\")[0],\n       to: $(\"#trash\")[0]\n     },\n     document.document)</code></pre><h3>Query Strings</h3>\nIf jQuery is present, you can pass a query string as the from or to option.\n\n<pre><code class='javascript'>Syn.move(\n     {\n       from: \".recipe\",\n       to: \"#trash\"\n     },\n     document.document)</code></pre><h3>No From</h3>\nIf you don't provide a from, the element argument passed to Syn is used.\n\n<pre><code class='javascript'>Syn.move(\n     { to: \"#trash\" },\n     'myrecipe')</code></pre>", "children": []})