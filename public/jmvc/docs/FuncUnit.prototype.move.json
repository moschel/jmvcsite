C({"name": "FuncUnit.prototype.move", "params": {"options": {"description": "<p>A selector or coordinates describing the motion of the move.</p>\n\n<h5>Options as a Selector</h5>\n\n<p>Passing a string selector to move the mouse.  The move runs to the center of the element\nmatched by the selector.  The following moves from the center of #foo to the center of #bar.</p>\n\n<pre><code class='javascript'>S('#foo').move('#bar') </code></pre>\n\n<h5>Options as Coordinates</h5>\n\n<p>You can pass in coordinates as clientX and clientY:</p>\n\n<pre><code class='javascript'>S('#foo').move('100x200') </code></pre>\n\n<p>Or as pageX and pageY</p>\n\n<pre><code class='javascript'>S('#foo').move('100X200') </code></pre>\n\n<p>Or relative to the start position\nS('#foo').move('+10 +20')</p>\n\n<h5>Options as an Object</h5>\n\n<p>You can configure the duration, start, and end point of a move by passing in a json object.</p>\n\n<pre><code class='javascript'>//drags from 0x0 to 100x100 in 2 seconds\nS('#foo').move({\n  from: \"0x0\",\n  to: \"100x100\",\n  duration: 2000\n}) </code></pre>", "type": "String|Object", "optional": false, "order": 0, "name": "options"}, "callback": {"description": "<p>a callback that runs after the drag, but before the next action.</p>", "type": "Function", "optional": true, "order": 1, "name": "callback"}}, "ret": {"description": "<p>returns the funcunit selector for chaining.</p>", "type": "funcUnit"}, "type": "function", "parent": "FuncUnit.prototype", "comment": "<p>Moves an element into another element or coordinates.  This will trigger mouseover\nmouseouts accordingly.\nThis takes the same paramameters as [Syn.prototype.move move].</p>", "children": []})