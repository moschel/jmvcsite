C({"name": "jquery.model.events", "type": "page", "parent": "../jquery/model/pages/events.js", "comment": "<p>Models produce events that you can listen to.  This is\nuseful when there are multiple representations of the same instance on the page.\nIf one representation is updated, the other representation \nshould be updated.</p>\n\n<p>Events also provide a more traditional MVC approach.  View-Controllers\nbind to a specific property.  If that property changes, the\nView-Controller updates itself.</p>\n\n<p>Model provides two ways to listen for events on model instances:</p>\n\n<h2>Way 1: Bind</h2>\n\n<p>You can [jQuery.Model.prototype.bind bind] to attribute changes in a model instance\njust like you would with events in jQuery.</p>\n\n<p>The following listens for contact birthday changes.</p>\n\n<pre><code class='javascript'>contact.bind(\"birthday\", function(ev, birthday){\n  // do something\n})</code></pre>\n\n<p>The 'birthday' event is triggered whenever an attribute is\nsuccessfully changed:</p>\n\n<pre><code class='javascript'>contact.attr('birthday', \"10-20-1982\");</code></pre>\n\n<p>Bind is the prefered approach if you're favoring a more\ntraditional MVC architecture.  However, this can sometimes\nbe more complex than the subscribe method because of\nmaintaining additional event handlers.</p>\n\n<h2>Way 2: Subscribe</h2>\n\n<p>If OpenAjax.hub is available, Models also publish events when \nan instance is created, updated, or destroyed.</p>\n\n<p>You can subscribe to these events with OpenAjax.hub like:</p>\n\n<pre><code class='javascript'>OpenAjax.hub.subscribe(\n  \"contact.updated\", \n  function(called, contact){\n    //do something ...\n})</code></pre>\n\n<p>Typically, you'll subscribe with the\n<code>jquery/controller/subscribe</code> plugin like:</p>\n\n<pre><code class='javascript'>$.Controller.extend(\"Subscriber\",{\n\n  ...\n\n  \"todo.destroyed subscribe\" : function(called, todo){\n\n    //find the contact in this widget:\n    var el = todo.elements(this.element)\n\n    //remove element\n    el.remove();\n  },\n\n  ...\n})</code></pre>", "title": "Events", "parents": ["jQuery.Model"], "children": []})