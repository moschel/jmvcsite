C({"name": "jQuery.fixture.make", "params": {"types": {"description": "<p>An array of the fixture names</p>", "type": "Array", "optional": false, "order": 0, "name": "types"}, "count": {"description": "<p>the number of items to create</p>", "type": "Number", "optional": false, "order": 1, "name": "count"}, "make": {"description": "<p>a function that will return json data representing the object.</p>", "type": "Function", "optional": false, "order": 2, "name": "make"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parent": "jQuery.fixture", "comment": "<p>Used to make fixtures for findAll / findOne style requests.</p>\n\n<pre><code class='javascript'>//makes a threaded list of messages\n$.fixture.make([\"messages\",\"message\"],1000, function(i, messages){\n  return {\n    subject: \"This is message \"+i,\n    body: \"Here is some text for this message\",\n    date: Math.floor( new Date().getTime() ),\n    parentId : i < 100 ? null : Math.floor(Math.random()*i)\n  }\n})\n//uses the message fixture to return messages limited by offset, limit, order, etc.\n$.ajax({\n  url: \"messages\",\n  data:{ \n     offset: 100, \n     limit: 50, \n     order: \"date ASC\",\n     parentId: 5},\n   },\n   fixture: \"-messages\",\n   success: function( messages ) {  ... }\n});</code></pre>", "children": []})