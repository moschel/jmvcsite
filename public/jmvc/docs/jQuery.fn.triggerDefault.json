C({"name": "jQuery.fn.triggerDefault", "params": {"type": {"description": "<p>The type of event to trigger.</p>", "type": "Object", "optional": false, "order": 0, "name": "type"}, "data": {"description": "<p>Some data to pass to callbacks listening to this \nevent.</p>", "type": "Object", "optional": false, "order": 1, "name": "data"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parent": "jQuery.fn", "comment": "<p>Triggers the event, stops the event from propagating through the DOM, and \nreturns whether or not the event's default action was prevented. <br />\nIf true, the default action was not prevented.  If false, the \ndefault action was prevented.  This is the same as triggerDefaults, but \nthe event doesn't bubble.  Use these methods to easily determine if default was \nprevented, and proceed accordingly.</p>\n\n<p>Widget developers might use this method to perform additional logic if an event \nhandler doesn't prevent the default action.  For example, a tabs widget might \nhide the currently shown tab if the application developer doesn't prevent default.</p>", "children": []})