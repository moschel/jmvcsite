C({"name": "documenting", "type": "page", "parent": "../jmvc/pages/documenting.js", "comment": "<h1 class='addFavorite'>Documenting Cookbook</h1>\n\n<p>Documentation is a critical step in creating maintainable code. \nIt's often burdensome on developers and becomes a neglected. \nJavaScriptMVC's integrated documentation makes it easy to document JavaScript.\n</p>\n\n<h2>Generating Documentation</h2>\n<p>Before creating the docs, put your app back in development mode:</p>\n\n<pre><code class='html'>&lt;script type='text/javascript' \n       src='../steal/steal.js?cookbook,<span style=\"text-decoration:underline;\"><b>development</b></span>'>\n&lt;/script></code></pre><p>Create the docs by running:</p>\n\n<pre><code class='javascript'>> documentjs/doc cookbook/cookbook.html</code></pre><p>In fact, you've already created documentation!</p>\n<h2>Viewing Documentation\n</h2>\n\n<p> Open <b>cookbook_doc.html</b> (in your root directory) and click RecipeController and then Recipe:\n</p>\n\n<p><img src='http://wiki.javascriptmvc.com/wiki/images/2/27/Docs.png' /></p>\n\n<h2>Writing Documentaion</h2>\n<p>Open recipe_controller.js:\n</p>\n\n<pre><code class='javascript'> /**\n  * @tag controllers, home\n  * Displays a table of recipes.  Lets the user \n  * &#91;\"RecipeController.prototype.form submit\" create&#93;, \n  * &#91;\"RecipeController.prototype.&amp;#46;edit click\" edit&#93;,\n  * or &#91;\"RecipeController.prototype.&amp;#46;destroy click\" destroy&#93; recipes.\n  */\n jQuery.Controller.extend('RecipeController',\n /* @Static */\n {\n    onDocument: true\n },\n /* @Prototype */\n {\n    /**\n     * When the page loads, gets all recipes to be displayed.\n     */\n    load: function(){\n        if(!$(\"#recipe\").length) \n            $(document.body).append($(document.createElement('div')).attr('id','recipe'))\n        Recipe.findAll({}, this.callback('list'));\n    },</code></pre><p>  You'll notice that the syntax for documentation is very similar to JavaDoc.  \nHowever, there are some important differences.  Consult the [include.Doc Documentation documentation]\nfor more information.\n</p>\n<h2>Next steps\n</h2>\n\n<p>In the context of this trivial application, you've been exposed to major tenets of JavaScriptMVC: \ncode separation, testing, compression, and documentation. This is pretty cool! Look at how simply you went from nothing to a compressed, tested, and documented application.\n</p>", "title": "2.5. Documenting Cookbook", "parents": ["getstarted"], "children": []})