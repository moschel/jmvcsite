C({"name": "jQuery.Controller.prototype.view", "params": {"view": {"description": "", "type": "", "optional": false, "order": 0, "name": "view"}, "data": {"description": "", "type": "", "optional": false, "order": 1, "name": "data"}, "myhelpers": {"description": "", "type": "", "optional": false, "order": 2, "name": "myhelpers"}, "optional1": {"order": 3, "description": "<p>view The view you are going to render.  If a view isn't explicity given\nthis function will try to guess at the correct view as show in the example code above.</p>", "name": "optional1", "type": "String", "optional": true}, "optional2": {"order": 4, "description": "<p>data data to be provided to the view.  If not present, the controller instance \nis used.</p>", "name": "optional2", "type": "Object", "optional": true}, "optional3": {"order": 5, "description": "<p>myhelpers an object of helpers that will be available in the view.  If not present\nthis controller class's \"Helpers\" property will be used.</p>", "name": "optional3", "type": "Object", "optional": true}}, "ret": {"description": "<p>the rendered result of the view.</p>", "type": "String"}, "type": "function", "parent": "jQuery.Controller.prototype", "comment": "<p>Renders a View template with the controller instance. If the first argument\nis not supplied, \nit looks for a view in /views/controller<em>name/action</em>name.ejs.\nIf data is not provided, it uses the controller instance as data.</p>\n\n<pre><code class='javascript'>TasksController = $.Controller.extend('TasksController',{\n  click: function( el ) {\n    // renders with views/tasks/click.ejs\n    el.html( this.view() ) \n    // renders with views/tasks/under.ejs\n    el.after( this.view(\"under\", [1,2]) );\n    // renders with views/shared/top.ejs\n    el.before( this.view(\"shared/top\", {phrase: \"hi\"}) );\n  }\n})</code></pre>", "tags": ["view"], "plugin": "controller/view", "children": []})