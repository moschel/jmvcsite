C({"name": "Micro", "params": {"str": {"description": "<p>template content.</p>", "type": "String", "optional": false, "order": 0, "name": "str"}, "data": {"description": "<p>render's the template with this content.</p>", "type": "Object", "optional": false, "order": 1, "name": "data"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parent": "../jquery/view/micro/micro.js", "comment": "<p>A very lightweight template engine. \nMagic tags look like:</p>\n\n<pre><code class='javascript'><h3>{%= message %}</h3></code></pre>\n\n<p>Micro is integrated in JavaScriptMVC so \nyou can use it like:</p>\n\n<pre><code class='javascript'>$(\"#foo\").html('//app/views/bar.micro',{});</code></pre>\n\n<h2>Pros</h2>\n\n<ul>\n<li>Very Lightweight</li>\n</ul>\n\n<h2>Cons</h2>\n\n<ul>\n<li>Doesn't handle nested tags.</li>\n<li>Doesn't handle {%= \"%}\" %}. </li>\n<li>More difficult to debug.</li>\n<li>Removes newlines and tabs.</li>\n</ul>\n\n<h2>Use</h2>\n\n<p>For more information on micro, see John Resig's\n[http://ejohn.org/blog/javascript-micro-templating/ write up].</p>", "parents": ["jQuery.View"], "plugin": "jquery/view/micro", "children": []})