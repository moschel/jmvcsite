C({"name": ".toJSON", "params": {"o": {"description": "", "type": "", "optional": false, "order": 0, "name": "o"}, "replacer": {"description": "", "type": "", "optional": false, "order": 1, "name": "replacer"}, "space": {"description": "", "type": "", "optional": false, "order": 2, "name": "space"}, "recurse": {"description": "", "type": "", "optional": false, "order": 3, "name": "recurse"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parent": "../jquery/lang/json/json.js", "comment": "<p>jQuery.toJSON( json-serializble )\n       Converts the given argument into a JSON respresentation.</p>\n\n<p><pre><code>   If an object has a \"toJSON\" function, that will be used to get the representation.\n   Non-integer/string keys are skipped in the object, as are keys that point to a function.</p>\n\n<p>json-serializble:\n       The <em>thing</em> to be converted.\n</code></pre>jQuery.toJSON( json-serializble )\n       Converts the given argument into a JSON respresentation.</p>\n\n<pre><code>   If an object has a \"toJSON\" function, that will be used to get the representation.\n   Non-integer/string keys are skipped in the object, as are keys that point to a function.\n\n   json-serializble:\n       The *thing* to be converted.\n</code></pre>", "children": []})