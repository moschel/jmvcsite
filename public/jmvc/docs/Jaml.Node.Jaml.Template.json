C({"name": "Jaml.Node.Jaml.Template", "params": {"tpl": {"description": "", "type": "", "optional": false, "order": 0, "name": "tpl"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parent": "Jaml.Node", "comment": "<p>Represents a single registered template. Templates consist of an arbitrary number\nof trees (e.g. there may be more than a single root node), and are not compiled.\nWhen a template is rendered its node structure is computed with any provided template\ndata, culminating in one or more root nodes.  The root node(s) are then joined together\nand returned as a single output string.</p>\n\n<p>The render process uses two dirty but necessary hacks.  First, the template function is\ndecompiled into a string (but is not modified), so that it can be eval'ed within the scope\nof Jaml.Template.prototype. This allows the second hack, which is the use of the 'with' keyword.\nThis allows us to keep the pretty DSL-like syntax, though is not as efficient as it could be.</p>", "children": []})